@page "/contributions"

@using System.Collections.Generic
@using System.Globalization
@using TTConfTool.Shared.Contracts
@using TTConfTool.Shared.ViewModels
@using Microsoft.AspNetCore.Authorization

@attribute [Authorize]

@inject IContributionsService _contributionsClient

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-10">
    <MudText Typo="Typo.h4" GutterBottom="true">Contributions</MudText>
    @if (_contributions == null)
    {
        <MudProgressCircular Color="Color.Default" Indeterminate="true" />
    }
    else
    {
        <MudSimpleTable Style="overflow-x: auto;" Hover="true" Dense="true">
            <thead>
                <tr>
                    <th>Titel</th>
                    <th>Sprecher</th>
                    <th>Datum</th>
                    <th>Konferenz</th>
                    <th>Art</th>
                    <th>Tags</th>
                </tr>
            </thead>
            <tbody>
                <Virtualize Items="@_contributions" Context="contr">
                    <tr @key="contr.ID">
                        <td>@contr.Title</td>
                        <td>@contr.SpeakersString</td>
                        <td>@contr.Date.ToString("dd.MM.yyyy", CultureInfo.InvariantCulture)</td>
                        <td><a href="@contr.Conference?.Url" target="_blank">@contr.Conference?.Title</a></td>
                        <td>@contr.Type</td>
                        <td>@contr.TagsString</td>
                    </tr>
                </Virtualize>
            </tbody>
        </MudSimpleTable>
    }
</MudContainer>

@code {
    private List<ListViewContribution> _contributions;

    protected override async Task OnInitializedAsync()
    {
        await LoadContributions();
    }

    private async Task LoadContributions()
    {
        _contributions = (await _contributionsClient.GetListViewContributionsAsync());
    }
}
